{"version":3,"sources":["containers/ContactsList/ContactsList.module.scss","components/Contact/Contact.module.scss","store/AC/contactsList.js","store/constants/contactsList.js","components/Contact/Contact.js","containers/ContactsList/ContactsList.js","utils/validators.js","containers/ContactForm/ContactForm.js","store/reducers/contactsList.js","store/reducers/index.js","config/firebase.js","store/index.js","store/middlewares/serviceMiddleware.js","App.js","serviceWorker.js","index.js","containers/ContactForm/ContactForm.module.scss"],"names":["module","exports","contactsWrap","contactsBlock","contact","addNew","name","email","close","changeContactFormState","formData","type","payload","Contact","props","_props$contactData2","contactData","isGmail","search","react_default","a","createElement","className","styles","onClick","_props$contactData","id","history","push","editContact","ContactsList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showContacts","filteredContacts","length","map","key","components_Contact_Contact","assign","addNewContact","state","handleFind","bind","assertThisInitialized","_this$props","getContacts","contactsLoaded","e","findContact","target","value","onChange","placeholder","Link","to","Component","connect","_state$contactsList","contactsList","contacts","filter","f","toLowerCase","dispatch","emailValidator","test","ContactForm","delete","deleteContact","confirm","_this$props2","_this$props2$formData","createNewContact","updateContact","_this$state","setState","wrongEmail","handleChangeName","handleChangeEmail","_this$props3","_this$props4","contactFormWrapper","defaultValue","redBorder","buttons","buttonsCreateUser","cancel","newContact","updContact","initialState","arguments","undefined","action","GET_CONTACTS","objectSpread","CREATE_NEW_CONTACT","toConsumableArray","concat","DELETE_CONTACT","delContact","UPDATE_CONTACT","console","log","combineReducers","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","settings","timestampsInSnapshots","enhancer","applyMiddleware","store","next","dbContacts","collection","docRef","hasOwnProperty","doc","get","then","snapshot","array","forEach","data","catch","error","add","_action$payload","update","createStore","reducer","App","es","BrowserRouter","basename","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a3cda852.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsWrap\":\"ContactsList_contactsWrap__3LmPC\",\"contactsBlock\":\"ContactsList_contactsBlock__1LqbO\",\"contact\":\"ContactsList_contact__3OP9D\",\"addNew\":\"ContactsList_addNew__29pxf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__15zzt\",\"name\":\"Contact_name__1VE6U\",\"email\":\"Contact_email__1uT3C\",\"close\":\"Contact_close__3wTBB\"};","import {\r\n    GET_CONTACTS,\r\n    CHANGE_CONTACT_FORM_STATE,\r\n    CREATE_NEW_CONTACT,\r\n    DELETE_CONTACT,\r\n    UPDATE_CONTACT,\r\n    FIND_CONTACT,\r\n} from '../constants/contactsList';\r\n\r\nexport const getContacts = () => ({ type: GET_CONTACTS });\r\nexport const changeContactFormState = formData => ({ type: CHANGE_CONTACT_FORM_STATE, payload: formData });\r\nexport const createNewContact = newContact => ({ type: CREATE_NEW_CONTACT, payload: newContact });\r\nexport const deleteContact = id => ({ type: DELETE_CONTACT, payload: id });\r\nexport const updateContact = updContact => ({ type: UPDATE_CONTACT, payload: updContact });\r\nexport const findContact = value => ({ type: FIND_CONTACT, payload: value });\r\n","export const CREATE_NEW_CONTACT = 'CREATE_NEW_CONTACT';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\r\nexport const GET_CONTACTS = 'GET_CONTACTS';\r\nexport const CHANGE_CONTACT_FORM_STATE = 'CHANGE_CONTACT_FORM_STATE';\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\r\nexport const FIND_CONTACT = 'FIND_CONTACT';\r\n\r\nexport const SUCCESS = '_SUCCESS';\r\nexport const FAIL = '_FAIL';\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Contact.module.scss';\r\n\r\nconst editContact = (props) => {\r\n    const { contactData: { name, email, id, }, changeContactFormState, history, } = props;\r\n    changeContactFormState({\r\n        type: 'edit',\r\n        name, email, id\r\n    });\r\n    history.push('/edit-contact')\r\n}\r\n\r\nconst Contact = (props) => {\r\n    const { contactData: { name, email }} = props;\r\n    let isGmail = null;\r\n    if(email.search('gmail')!==-1){\r\n        isGmail = '(gmail account)'\r\n    }\r\n    return(\r\n        <div className={styles.contact} onClick={()=>{editContact(props)}}>\r\n            <span  className={styles.name}>{name} {isGmail}</span>\r\n            <span  className={styles.email}>{email}</span>\r\n            <div className={styles.close}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;\r\n\r\nContact.propTypes = {\r\n    contactData: PropTypes.object.isRequired,\r\n    changeContactFormState: PropTypes.func.isRequired,\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {  getContacts, changeContactFormState, findContact, } from '../../store/AC/contactsList';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactsList.module.scss'\r\nimport Contact from '../../components/Contact/Contact';\r\nimport { Link, } from 'react-router-dom';\r\n\r\nclass ContactsList extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.handleFind = this.handleFind.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { getContacts, contactsLoaded, } = this.props;\r\n        if(!contactsLoaded){\r\n            getContacts();\r\n        }\r\n    }\r\n\r\n    showContacts = () => {\r\n        const { filteredContacts, } = this.props;\r\n        if(!filteredContacts) return;\r\n        if(filteredContacts.length === 0){\r\n            return <p> No contacts ...</p>\r\n        } else {\r\n            return filteredContacts.map(contact=><div  key={contact.id} className={styles.contact}>\r\n                <Contact contactData={contact} {...this.props} />\r\n            </div>)\r\n        }\r\n    }\r\n\r\n    addNewContact = () => {\r\n        this.props.changeContactFormState({\r\n            type:'addNew',\r\n            name: '',\r\n            email: '',\r\n        });\r\n    }\r\n\r\n    handleFind(e){\r\n        this.props.findContact(e.target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className={styles.contactsWrap} >\r\n            <h1>My address Book</h1>\r\n            <input \r\n                type=\"text\"\r\n                onChange={this.handleFind} \r\n                placeholder='Search...'/>\r\n            <div className={styles.contactsBlock}>\r\n                {this.showContacts()}\r\n            </div>\r\n            <Link to='/create-contact'>\r\n                <div className={styles.addNew} onClick={this.addNewContact}>+</div>\r\n            </Link>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { contacts, contactsLoaded, findContact, } = state.contactsList;\r\n    let filteredContacts = [];\r\n    if(findContact===''){\r\n        filteredContacts = contacts;\r\n    } else {\r\n        filteredContacts = contacts.filter(contact=>{\r\n            const f = findContact;\r\n            const { name, email, } = contact;\r\n            if(name.toLowerCase().search(f)!==-1 || email.toLowerCase().search(f)!==-1){\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        })\r\n    }\r\n    return {\r\n        filteredContacts, contactsLoaded, findContact,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n  {\r\n    getContacts: () => dispatch(getContacts()),\r\n    changeContactFormState: (formData) => dispatch(changeContactFormState(formData)),\r\n    findContact: (value) => dispatch(findContact(value)),\r\n  }\r\n);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n\r\nContactsList.propTypes = {\r\n  getContacts: PropTypes.func.isRequired,\r\n  changeContactFormState: PropTypes.func.isRequired,\r\n  contactsLoaded: PropTypes.bool.isRequired,\r\n};","export const emailValidator = (value) => {\r\n    const reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n    return reg.test(value);\r\n };","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.scss';\r\nimport { connect, } from 'react-redux';\r\nimport { createNewContact, deleteContact, changeContactFormState, updateContact, } from '../../store/AC/contactsList'\r\nimport { emailValidator, } from '../../utils/validators';\r\nimport { Link, } from 'react-router-dom';\r\nclass ContactForm extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            wrongEmail: false,\r\n        };\r\n        this.handleChangeName = this.handleChangeName.bind(this);\r\n        this.handleChangeEmail = this.handleChangeEmail.bind(this);\r\n      }\r\n      \r\n    handleChangeName(e){\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n    handleChangeEmail(e){\r\n        this.setState({\r\n            email: e.target.value\r\n        })\r\n        if(this.state.wrongEmail){\r\n            this.setState({\r\n                wrongEmail: false\r\n            })\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const { formData, history, } = this.props;\r\n        if(formData && formData.type === null){\r\n            history.push('/')\r\n        } else {\r\n            this.setState({\r\n                name: formData.name, \r\n                email:formData.email\r\n            })\r\n        }\r\n    }\r\n    delete = () => {\r\n        const { deleteContact, formData:{id}, } = this.props;\r\n        deleteContact({id});\r\n    }\r\n    confirm = () => {\r\n        const { formData: {type, id,}, createNewContact, updateContact, history, } = this.props;\r\n        const { name, email, } = this.state;\r\n        if(!emailValidator(email)){\r\n            this.setState({ wrongEmail: true })\r\n            return;\r\n        }\r\n        if(type==='addNew'){\r\n            createNewContact({ name, email });\r\n        }\r\n        if(type==='edit'){\r\n            updateContact({ id, name, email, });\r\n        }\r\n        history.push('/');\r\n    }\r\n\r\n    render(){\r\n        const { wrongEmail, } = this.state;\r\n        const { formData, history, } = this.props;\r\n        if(formData && formData.type === null) return null;\r\n        const { type, } = formData;\r\n        return(\r\n            <div className={styles.contactFormWrapper}>\r\n                <h1>My Address Book / {type==='addNew' ? 'New contact' : 'Edit contact'}</h1>\r\n                <input \r\n                    type=\"text\"\r\n                    defaultValue={this.state.name} \r\n                    onChange={this.handleChangeName} \r\n                    placeholder='Name'/>\r\n                <input \r\n                    type=\"text\" \r\n                    defaultValue={this.state.email} \r\n                    onChange={this.handleChangeEmail}\r\n                    className={wrongEmail ? styles.redBorder : null}\r\n                    placeholder='Email'/>\r\n                {wrongEmail ? <span>Wrong email!</span> : null}\r\n                \r\n                <div className={styles.buttons}>\r\n                    {type==='edit' ? \r\n                    <Link to='/'>\r\n                        <div className={styles.delete} onClick={this.delete}>Delete</div>\r\n                    </Link>\r\n                    :null}\r\n                    <div className={styles.buttonsCreateUser}>\r\n                        <div className={styles.cancel} onClick={()=>{history.push('/')}}>Cancel</div>\r\n                        <div className={styles.confirm} onClick={this.confirm}>Ok</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}   \r\n\r\nconst mapStateToProps = (state) => {\r\n    const { formData, } = state.contactsList;\r\n    return {\r\n         formData,\r\n    };\r\n  };\r\n  \r\nconst mapDispatchToProps = dispatch => (\r\n  {\r\n      createNewContact: (newContact) => dispatch(createNewContact(newContact)),\r\n      deleteContact: (id) => dispatch(deleteContact(id)),\r\n      changeContactFormState: (formData) => dispatch(changeContactFormState(formData)),\r\n      updateContact: (updContact) => dispatch(updateContact(updContact)),\r\n  }\r\n);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n \r\nContactForm.propTypes = {\r\n    changeContactFormState: PropTypes.func.isRequired,\r\n    createNewContact: PropTypes.func.isRequired,\r\n    updateContact: PropTypes.func.isRequired,\r\n};","import {\r\n    GET_CONTACTS,\r\n    CHANGE_CONTACT_FORM_STATE,\r\n    CREATE_NEW_CONTACT,\r\n    DELETE_CONTACT,\r\n    UPDATE_CONTACT,\r\n    FIND_CONTACT,\r\n    SUCCESS, \r\n    FAIL,\r\n} from '../constants/contactsList';\r\n \r\nconst initialState = {\r\n   contacts: [],\r\n   contactsLoaded: false,\r\n   findContact: '',\r\n   formData: {\r\n       type: null,\r\n       id: '',\r\n       name: '',\r\n       email: '',\r\n    },\r\n};\r\n\r\nconst contactsList = (state = initialState, action) => {\r\n    const { payload, type, } = action;\r\n    switch (type) {\r\n        case GET_CONTACTS+ SUCCESS:\r\n            return { \r\n                ...state,\r\n                contacts: payload,\r\n                contactsLoaded: true,\r\n            }\r\n        case CREATE_NEW_CONTACT+ SUCCESS:\r\n        return { \r\n            ...state,\r\n            contacts: [...state.contacts, payload]\r\n        }\r\n        case DELETE_CONTACT + SUCCESS:\r\n        const delContact = state.contacts.filter(contact=>contact.id!==payload)\r\n        return { \r\n            ...state,\r\n            contacts: delContact,\r\n        }\r\n        case UPDATE_CONTACT+ SUCCESS:\r\n        const updContact = state.contacts.map(contact=>{\r\n            if(contact.id!==payload.id) return contact;\r\n            return payload;\r\n        })\r\n        return { \r\n            ...state,\r\n            contacts: updContact,\r\n        }\r\n        case FIND_CONTACT:\r\n            return {\r\n                ...state,\r\n                findContact: payload.toLowerCase(),\r\n            }\r\n        case CHANGE_CONTACT_FORM_STATE:\r\n            return {\r\n                ...state,\r\n                formData: payload,\r\n            }\r\n        case DELETE_CONTACT + FAIL:\r\n        case GET_CONTACTS + FAIL:\r\n        case CREATE_NEW_CONTACT + FAIL:\r\n        case UPDATE_CONTACT+ FAIL:\r\n            console.log('ERROR', payload);\r\n            break;\r\n        default:\r\n        return {\r\n            ...state\r\n        }\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\nexport default contactsList;","import { combineReducers } from \"redux\";\r\nimport contactsList  from './contactsList'\r\n\r\nexport default combineReducers({\r\n    contactsList,\r\n});\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBLORoh4FkiuolrscEBbPN1y2dxfAG5pbk\",\r\n  authDomain: \"address-book-b79c8.firebaseapp.com\",\r\n  databaseURL: \"https://address-book-b79c8.firebaseio.com\",\r\n  projectId: \"address-book-b79c8\",\r\n  storageBucket: \"address-book-b79c8.appspot.com\",\r\n  messagingSenderId: \"958910145696\"\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase \r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport reducer from './reducers'; \r\nimport serviceMiddleware from './middlewares/serviceMiddleware'\r\n \r\nconst enhancer = applyMiddleware(serviceMiddleware)\r\nconst store = createStore(reducer, {}, enhancer);\r\n\r\nexport default store;","import firebase from '../../config/firebase'\r\n\r\nexport default store => next => action => {\r\n\r\n\tconst dbContacts = firebase.firestore().collection('contacts');\r\n\tconst { type, payload, } = action;\r\n\t\r\n\tlet docRef = '';\r\n\tif(payload && payload.hasOwnProperty('id')){\r\n\t\tdocRef = dbContacts.doc(payload.id);\r\n\t}\r\n\tif(type === 'GET_CONTACTS'){\r\n\t\tdbContacts.get()\r\n\t\t.then(snapshot => {\r\n\t\t\tlet array = [];\r\n\t\t\t\r\n\t\t\tsnapshot.forEach((doc) => {\r\n\t\t\t\tarray.push(Object.assign({id:doc.id}, doc.data()));\r\n\t\t\t});\r\n\r\n\t\t\treturn next({\r\n\t\t\t\ttype: type+'_SUCCESS', \r\n\t\t\t\tpayload: array\r\n\t\t\t})\r\n\t\t})\r\n\t\t.catch(error => next({\r\n\t\t\t\ttype: type+'_FAIL', \r\n\t\t\t\tpayload: error\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t} else if(action.type==='CREATE_NEW_CONTACT'){\r\n\t\tdbContacts.add({\r\n\t\tname: payload.name,\r\n\t\temail: payload.email,\r\n\t})\r\n\t.then( docRef => next({\r\n\t\t\ttype: type+'_SUCCESS', \r\n\t\t\tpayload: Object.assign({}, payload, {id: docRef.id })\r\n\t\t})\r\n\t)\r\n\t.catch( error => next({\r\n\t\t\ttype: type+'_FAIL', \r\n\t\t\tpayload: error\r\n\t\t})\r\n\t);\r\n\t} else if(action.type==='DELETE_CONTACT'){\r\n\t\tdocRef.delete().then(()=>next({\r\n\t\t\ttype: type+'_SUCCESS',\r\n\t\t\tpayload: payload.id\r\n\t\t})).catch(error=>next({\r\n\t\t\ttype: type+'_FAIL',\r\n\t\t\tpayload:error,\r\n\t\t}));\r\n\t} else if(action.type==='UPDATE_CONTACT'){\r\n\t\tconst { name, email} = action.payload;\r\n\t\tdocRef.update({name,email})\r\n\t\t.then(()=>next({\r\n\t\t\ttype: type + '_SUCCESS',\r\n\t\t\tpayload\r\n\t\t})).catch(()=>next({\r\n\t\t\ttype: type+'_FAIL',\r\n\t\t\tpayload\r\n\t\t}));\r\n\t}else{\r\n\t\tnext(action)\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport ContactsList from './containers/ContactsList/ContactsList';\nimport ContactForm from './containers/ContactForm/ContactForm';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from './store'\n\nclass App extends Component {\n  render() {\n    return (    \n    <Provider store={store}>\n      <Router basename=\"/address-book-app\">\n        <div>\n          <Route exact path=\"/\" component={ContactsList} />\n          <Route path=\"/create-contact\" component={ContactForm} />\n          <Route path=\"/edit-contact\" component={ContactForm} />\n        </div>\n      </Router>\n    </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactFormWrapper\":\"ContactForm_contactFormWrapper__30buL\",\"redBorder\":\"ContactForm_redBorder__13U4A\",\"buttons\":\"ContactForm_buttons__1ZR0V\",\"delete\":\"ContactForm_delete__3-miT\",\"cancel\":\"ContactForm_cancel__2nsYI\",\"confirm\":\"ContactForm_confirm__3GPZ7\",\"buttonsCreateUser\":\"ContactForm_buttonsCreateUser__dYhXm\"};"],"sourceRoot":""}